{% extends 'base_fluid.html.twig' %}

{% block title %} Create Processes {% endblock %}

{% block body %}

    {# Warning messages #}
    <div class="mt-4">
        {% for label, messages in app.flashes %}
            {% for message in messages %}
                <div class="alert alert-{{ label }}">
                    {{ message }}
                </div>
            {% endfor %}
        {% endfor %}
    </div>

    <div style="display: flex; flex-direction: row; ">

        {# Form box #}
        <div class="card w-50 mt-4" data-prototype="{{ form_widget(form.processes.vars.prototype)|e('html_attr') }}"
             data-index="{{ form.processes| length }}">
            <div class="card-header bg-warning">
                <b>Create Processes</b>
            </div>
            <div class="card-body">
                {{ form_errors(form) }}
                {{ form_start(form) }}

                {{ form_row(form.processes) }}

                <div class="d-flex flex-row justify-content-center">
                    <button type="button" class="btn btn-success" id="add-new-process">Add new process</button>
                </div>
                {{ form_end(form) }}

            </div>
        </div>

        {# Picture #}
        <div class="p-4 w-50" style="position: fixed;top: 8%; right:1%">
            <h4 style="text-align: center"><u>Recommendation of processes in any situation</u></h4>
            <img class="w-100" src="{{ asset('images/ProcessRecommendation.JPG') }}">
        </div>

    </div>

{% endblock %}

{% block javascripts %}
    {{ parent() }}
    <script>
        let card = $(".card");
        let processes = $("#form_processes");
        let removeProcessButton = `<div class="d-flex flex-row justify-content-center m-1">
                                       <button type="button" class="btn btn-danger">Remove Process</button>
                                   </div>`;

        let parentAndChildProcessTypes = JSON.parse(("{{ childAndParentProcessTypes|json_encode }}").replace(/&quot;/ig, '"'));

        $("#add-new-process").on("click", function () {
            let processCounter = card.data("index");
            let processPrototype = card.data("prototype");
            var newProcess = processPrototype.replace(/__name__/g, processCounter);
            processes.append(newProcess);
            $("#form_processes_" + processCounter).append(removeProcessButton);
            card.data('index', processCounter + 1);

            formatProcessSections(processCounter);
            $(".btn-danger").on("click", function () {
                $(this).parent().parent().remove();
            });

            $("[id^=form_processes_] [id$=otherRelatedProcessKinds]").css({
                "max-height":"120px",
                "overflow":"auto"
            });

            /* Remove parent process types from other related process types */
            $("[id^=form_processes_] [id$=parentProcessKind]").on("change", function () {
                let processType = $(this).find(":selected").text();
                let parentProcessType = parentAndChildProcessTypes[processType];
                let childProcessType = null;

                Object.entries(parentAndChildProcessTypes).forEach(([key, value]) => {
                    if(`${value}`===processType) // "a 5", "b 7", "c 9"
                        childProcessType = `${key}`
                });

                $(this).parent().parent().children().eq(2).find(':checkbox').each(function () {
                    $(this).parent().css("display", "block");
                });


                $(this).parent().parent().children().eq(2).find(':checkbox').each(function () {
                    if (processType === $(this).next('label').text()) {
                        if ($(this).is(":checked"))
                            $(this).prop('checked', false);
                        $(this).parent().css("display", "none");
                    }
                    if (parentProcessType === $(this).next('label').text()) {
                        if ($(this).is(":checked"))
                            $(this).prop('checked', false);
                        $(this).parent().css("display", "none");
                    }
                    if (childProcessType === $(this).next('label').text()) {
                        if ($(this).is(":checked"))
                            $(this).prop('checked', false);
                        $(this).parent().css("display", "none");
                    }
                });
            });
        });

        if (card.data("index") !== 0) {
            for (let i = 0; i < card.data("index"); i++) {
                formatProcessSections(i);
                $("#form_processes_" + i).append(removeProcessButton);
                $(".btn-danger").on("click", function () {
                    $(this).parent().parent().remove();
                });
            }
        }

        function formatProcessSections(counter) {
            $("#form_processes_" + counter).css({
                "padding": "2%",
                "border": "1px solid #cacaca",
                "border-radius": "1%",
                "margin-top": "2%",
                "margin-bottom": "2%"
            });
        }


        console.log("hmm");

    </script>
{% endblock %}