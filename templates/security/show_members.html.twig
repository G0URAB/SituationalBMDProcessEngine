{% extends 'base_fluid.html.twig' %}

{% block title %} Team Members {% endblock %}

{% block body %}

    <div class="mt-4">
        {% for label, messages in app.flashes %}
            {% for message in messages %}
                <div class="alert alert-{{ label }}">
                    {{ message }}
                </div>
            {% endfor %}
        {% endfor %}
    </div>

    <div class="d-flex flex-row justify-content-center mt-4">
        {% if is_granted('ROLE_SUPER_ADMIN') or is_granted('ROLE_PROJECT_MANAGER') %}
            <a href="{{ path('add_team_member') }}" class="btn btn-primary">Add new team member</a>
        {% endif %}
        <a href="{{ path('change_own_password') }}" class="btn btn-warning ml-3">Change your password</a>
    </div>

    {% if is_granted('ROLE_SUPER_ADMIN') or is_granted('ROLE_PROJECT_MANAGER') %}
        <div class="card mt-4">
            <div class="card-header bg-dark text-white">
                <b>Total members: {{ allUsers|length }}</b>
            </div>
            <div class="table-responsive" style="max-height: 500px">
                <table class="table table-sm table-dark">
                    <thead class="text-center">
                    <tr style="position: sticky;top: 0;background: #606160;">
                        <th scope="col">Index</th>
                        <th scope="col">Name of member</th>
                        <th scope="col">Email</th>
                        <th scope="col">Role</th>
                        <th scope="col">Delete</th>
                    </tr>
                    </thead>
                    <tbody class="text-center bg-transparent">
                    {% for user in allUsers %}
                        <tr>
                            <td {% if user.implodedRoles == 'ROLE_SUPER_ADMIN' %} style="pointer-events: none" {% endif %}>
                                <a href="{{ path('edit_team_member',{id:user.id}) }}">{{ loop.index }}</a>
                            </td>
                            <td>{{ user.employeeName }}</td>
                            <td>{{ user.email }}</td>
                            <td>{{ user.implodedRoles }}</td>
                            <td {% if user.implodedRoles == 'ROLE_SUPER_ADMIN' %} style="pointer-events: none" {% endif %}>
                                <a href="#" class="delete-user" data-userId="{{ user.id }}" data-roles="{{ user.implodedRoles }}"><i style="font-size:24px"
                                                                                               class="fa">&#xf014;</i></a>
                            </td>
                        </tr>
                    {% endfor %}
                    </tbody>
                </table>
            </div>
        </div>
    {% endif %}

    <div class="spinner-grow text-danger" role="status" id="spinner"
         style="position: absolute; top:30%; left:40%; display: none;">
        <span class="sr-only">Loading...</span>
    </div>

{% endblock %}

{% block javascripts %}
    {{ parent() }}
    <script>
        $(".delete-user").on("click", function () {

            let userId = $(this).attr("data-userId");
            let roles = $(this).attr("data-roles");

            console.log(userId, roles);
            if(parseInt(userId)===parseInt("{{ app.user.id }}"))
                alert("You cant delete yourself");

            else if (confirm("Are you sure to delete this user?")) {
                $(".container-fluid").children().not("#spinner").css({
                    'opacity': '0.3',
                    'pointer-events': 'none'
                });
                $("#spinner").css("display", "block");
                $.ajax({
                    type: 'POST',
                    url: '{{ path('delete_user') }}',
                    data: {
                        user_id: $(this).attr("data-userId")
                    },
                    success: function (response) {
                        let obj = JSON.parse(JSON.stringify(response));
                        let constraints = obj.constraints;
                        if (constraints.length > 0) {
                            let message = "The user is associated in the following tasks. Please remove him/her from the following tasks and try again.\n \n";
                            constraints.forEach(function (constraint, index) {
                                message += index + 1 + ": '" + constraint.taskName + "' in '" + constraint.localGraph + "' of " + constraint.methodName + ".\n";
                            });
                            $(".container-fluid").children().not("#spinner").css({
                                'opacity': '1',
                                'pointer-events': 'auto'
                            });
                            $("#spinner").css("display", "none");
                            alert(message);
                        } else
                            window.location.reload();
                    }
                });
            }
        });
    </script>
{% endblock %}